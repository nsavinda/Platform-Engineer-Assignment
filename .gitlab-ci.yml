stages:
  - build
  - test
  - deploy

variables:
  IMAGE_TAG: "$CI_COMMIT_SHORT_SHA"
  IMAGE_NAME: "$CI_REGISTRY_IMAGE/app"
  TASK_CPU: 256 
  TASK_MEMORY: 512

build:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"
  script:
    - echo "Building Docker image..."
    - docker build -t "$IMAGE_NAME:$IMAGE_TAG" .
    - docker push "$IMAGE_NAME:$IMAGE_TAG" # Push the image to the registry
    - echo "container_image=$IMAGE_NAME:$IMAGE_TAG" > image_meta.txt # Save image metadata
  artifacts:
    paths:
      - image_meta.txt

deploy:
  stage: deploy
  image:
    name: hashicorp/terraform:latest
    entrypoint: [""]
  script:
    - export AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY
    - export AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID
    - echo "Deploying app with Terraform..."
    - cd terraform
    - source ../image_meta.txt # Load image metadata
    - terraform init
    - |
      terraform plan -out=tfplan \
        -var="container_image=$container_image" \
        -var="aws_secret_key=$AWS_SECRET_ACCESS_KEY" \
        -var="aws_access_key=$AWS_ACCESS_KEY_ID" \
        -var="ci_user=$CI_REGISTRY_USER" \
        -var="ci_password=$CI_REGISTRY_PASSWORD" \
        -var="task_cpu=$TASK_CPU" \
        -var="task_memory=$TASK_MEMORY"
    - terraform apply -auto-approve tfplan
